// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   potatoAPI/v1
// Description:
//   API for ePotato

#import "GTLRPotatoAPIQuery.h"

#import "GTLRPotatoAPIObjects.h"

@implementation GTLRPotatoAPIQuery

@dynamic fields;

@end

@implementation GTLRPotatoAPIQuery_ChangePassword

@dynamic epid, npw, opw;

+ (instancetype)queryWithEpid:(NSString *)epid
                          npw:(NSString *)npw
                          opw:(NSString *)opw {
  NSArray *pathParams = @[
    @"epid", @"npw", @"opw"
  ];
  NSString *pathURITemplate = @"changePassword/{epid}/{npw}/{opw}";
  GTLRPotatoAPIQuery_ChangePassword *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.epid = epid;
  query.npw = npw;
  query.opw = opw;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.changePassword";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_Check

@dynamic xKind, idKey, idValue;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"xKind" : @"_kind" };
}

+ (instancetype)queryWithXKind:(NSString *)xKind
                         idKey:(NSString *)idKey
                       idValue:(NSString *)idValue {
  NSArray *pathParams = @[
    @"_kind", @"idKey", @"idValue"
  ];
  NSString *pathURITemplate = @"check/{_kind}/{idKey}/{idValue}";
  GTLRPotatoAPIQuery_Check *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.xKind = xKind;
  query.idKey = idKey;
  query.idValue = idValue;
  query.expectedObjectClass = [GTLRPotatoAPI_Id class];
  query.loggingName = @"potatoAPI.check";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_CheckAll

@dynamic kind, properties, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"properties" : [NSString class],
    @"values" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithKind:(NSString *)kind
                   properties:(NSArray<NSString *> *)properties
                       values:(NSArray<NSString *> *)values {
  NSString *pathURITemplate = @"checkAll";
  GTLRPotatoAPIQuery_CheckAll *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.kind = kind;
  query.properties = properties;
  query.values = values;
  query.expectedObjectClass = [GTLRPotatoAPI_IdCollection class];
  query.loggingName = @"potatoAPI.checkAll";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_CheckAllOne

@dynamic kind, property, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithKind:(NSString *)kind
                     property:(NSString *)property
                       values:(NSArray<NSString *> *)values {
  NSString *pathURITemplate = @"checkAllOne";
  GTLRPotatoAPIQuery_CheckAllOne *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.kind = kind;
  query.property = property;
  query.values = values;
  query.expectedObjectClass = [GTLRPotatoAPI_IdCollection class];
  query.loggingName = @"potatoAPI.checkAllOne";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_ContactSuggestions

@dynamic uid;

+ (instancetype)queryWithUid:(NSString *)uid {
  NSArray *pathParams = @[ @"uid" ];
  NSString *pathURITemplate = @"contactSuggestions/{uid}";
  GTLRPotatoAPIQuery_ContactSuggestions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.uid = uid;
  query.expectedObjectClass = [GTLRPotatoAPI_ProfileCollection class];
  query.loggingName = @"potatoAPI.contactSuggestions";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_DeleteAccount

@dynamic epid, password;

+ (instancetype)queryWithEpid:(NSString *)epid
                     password:(NSString *)password {
  NSArray *pathParams = @[
    @"epid", @"password"
  ];
  NSString *pathURITemplate = @"account/{epid}/{password}";
  GTLRPotatoAPIQuery_DeleteAccount *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.epid = epid;
  query.password = password;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.deleteAccount";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_DeleteContact

@dynamic contactUid, uid;

+ (instancetype)queryWithUid:(NSString *)uid
                  contactUid:(NSString *)contactUid {
  NSArray *pathParams = @[
    @"contactUid", @"uid"
  ];
  NSString *pathURITemplate = @"contact/{uid}/{contactUid}";
  GTLRPotatoAPIQuery_DeleteContact *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.uid = uid;
  query.contactUid = contactUid;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.deleteContact";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_Follow

@dynamic xUid, newId;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"xUid" : @"_uid" };
}

+ (instancetype)queryWithXUid:(NSString *)xUid
                        newId:(NSString *)newId {
  NSArray *pathParams = @[
    @"_uid", @"newId"
  ];
  NSString *pathURITemplate = @"follow/{_uid}/{newId}";
  GTLRPotatoAPIQuery_Follow *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.xUid = xUid;
  query.newId = newId;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.follow";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_FollowSuggestions

@dynamic uid;

+ (instancetype)queryWithUid:(NSString *)uid {
  NSArray *pathParams = @[ @"uid" ];
  NSString *pathURITemplate = @"followSuggestions/{uid}";
  GTLRPotatoAPIQuery_FollowSuggestions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.uid = uid;
  query.expectedObjectClass = [GTLRPotatoAPI_ProfileCollection class];
  query.loggingName = @"potatoAPI.followSuggestions";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_GetContacts

@dynamic xUid, phoneNumbers;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"xUid" : @"_uid" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"phoneNumbers" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithXUid:(NSString *)xUid
                 phoneNumbers:(NSArray<NSString *> *)phoneNumbers {
  NSString *pathURITemplate = @"getContacts";
  GTLRPotatoAPIQuery_GetContacts *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.xUid = xUid;
  query.phoneNumbers = phoneNumbers;
  query.expectedObjectClass = [GTLRPotatoAPI_ProfileCollection class];
  query.loggingName = @"potatoAPI.getContacts";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_GetFollowing

@dynamic uid;

+ (instancetype)queryWithUid:(NSString *)uid {
  NSArray *pathParams = @[ @"uid" ];
  NSString *pathURITemplate = @"profilecollection/{uid}";
  GTLRPotatoAPIQuery_GetFollowing *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.uid = uid;
  query.expectedObjectClass = [GTLRPotatoAPI_ProfileCollection class];
  query.loggingName = @"potatoAPI.getFollowing";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_GetPotatoes

@dynamic uid;

+ (instancetype)queryWithUid:(NSString *)uid {
    NSString * pathURITemplate = @"getPotatoes";
    GTLRPotatoAPIQuery_GetPotatoes *query =
            [[self alloc] initWithPathURITemplate:pathURITemplate
                                       HTTPMethod:nil
                               pathParameterNames:nil];
    query.uid = uid;
    query.expectedObjectClass = [GTLRPotatoAPI_PotatoCollection class];
    query.loggingName = @"potatoAPI.getPotatoes";
    return query;
}

@end

@implementation GTLRPotatoAPIQuery_GetProfile

@dynamic idKey, idValue;

+ (instancetype)queryWithIdKey:(NSString *)idKey
                       idValue:(NSString *)idValue {
  NSArray *pathParams = @[
    @"idKey", @"idValue"
  ];
  NSString *pathURITemplate = @"profile/{idKey}/{idValue}";
  GTLRPotatoAPIQuery_GetProfile *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.idKey = idKey;
  query.idValue = idValue;
  query.expectedObjectClass = [GTLRPotatoAPI_Profile class];
  query.loggingName = @"potatoAPI.getProfile";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_GetProfiles

@dynamic idKey, idValue;

+ (instancetype)queryWithIdKey:(NSString *)idKey
                       idValue:(NSString *)idValue {
  NSArray *pathParams = @[
    @"idKey", @"idValue"
  ];
  NSString *pathURITemplate = @"profilecollection/{idKey}/{idValue}";
  GTLRPotatoAPIQuery_GetProfiles *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.idKey = idKey;
  query.idValue = idValue;
  query.expectedObjectClass = [GTLRPotatoAPI_ProfileCollection class];
  query.loggingName = @"potatoAPI.getProfiles";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_GetTS

@dynamic xN, contacts;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"xN" : @"_n" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"contacts" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithXN:(NSInteger)xN
                   contacts:(NSArray<NSString *> *)contacts {
  NSString *pathURITemplate = @"getTS";
  GTLRPotatoAPIQuery_GetTS *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.xN = xN;
  query.contacts = contacts;
  query.expectedObjectClass = [GTLRPotatoAPI_ProfileCollection class];
  query.loggingName = @"potatoAPI.getTS";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_Insert

@dynamic kind, properties, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"properties" : [NSString class],
    @"values" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithKind:(NSString *)kind
                   properties:(NSArray<NSString *> *)properties
                       values:(NSArray<NSString *> *)values {
  NSString *pathURITemplate = @"insert";
  GTLRPotatoAPIQuery_Insert *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.kind = kind;
  query.properties = properties;
  query.values = values;
  query.expectedObjectClass = [GTLRPotatoAPI_Id class];
  query.loggingName = @"potatoAPI.insert";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_KevinBacon

+ (instancetype)query {
    NSString * pathURITemplate = @"kevinBacon";
    GTLRPotatoAPIQuery_KevinBacon *query =
            [[self alloc] initWithPathURITemplate:pathURITemplate
                                       HTTPMethod:@"POST"
                               pathParameterNames:nil];
    query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
    query.loggingName = @"potatoAPI.kevinBacon";
    return query;
}

@end

@implementation GTLRPotatoAPIQuery_Login

@dynamic epid, password;

+ (instancetype)queryWithEpid:(NSString *)epid
                     password:(NSString *)password {
  NSArray *pathParams = @[
    @"epid", @"password"
  ];
  NSString *pathURITemplate = @"login/{epid}/{password}";
  GTLRPotatoAPIQuery_Login *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.epid = epid;
  query.password = password;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.login";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_NewContact

@dynamic contactUid, uid;

+ (instancetype)queryWithUid:(NSString *)uid
                  contactUid:(NSString *)contactUid {
  NSArray *pathParams = @[
    @"contactUid", @"uid"
  ];
  NSString *pathURITemplate = @"newContact/{uid}/{contactUid}";
  GTLRPotatoAPIQuery_NewContact *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.uid = uid;
  query.contactUid = contactUid;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.newContact";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_RecoverPassword

@dynamic epid;

+ (instancetype)queryWithEpid:(NSString *)epid {
  NSArray *pathParams = @[ @"epid" ];
  NSString *pathURITemplate = @"recoverPassword/{epid}";
  GTLRPotatoAPIQuery_RecoverPassword *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.epid = epid;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.recoverPassword";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_SendFCM

@dynamic newPotato, uids, x, y;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"uids" : [NSString class],
    @"x" : [NSString class],
    @"y" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithNewPotato:(BOOL)newPotato
                              uids:(NSArray<NSString *> *)uids
                                 x:(NSArray<NSString *> *)x
                                 y:(NSArray<NSString *> *)y {
  NSString *pathURITemplate = @"sendFCM";
  GTLRPotatoAPIQuery_SendFCM *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.newPotato = newPotato;
  query.uids = uids;
  query.x = x;
  query.y = y;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.sendFCM";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_SendPotato

@dynamic xAddresseesUids, addresseesTs, addressor, form, message, pid;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"addresseesTs" : @"addressees_ts",
    @"xAddresseesUids" : @"_addressees_uids"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"_addressees_uids" : [NSString class],
    @"addressees_ts" : [NSNumber class]
  };
  return map;
}

+ (instancetype)queryWithXAddresseesUids:(NSArray<NSString *> *)xAddresseesUids
                            addresseesTs:(NSArray<NSNumber *> *)addresseesTs
                               addressor:(NSString *)addressor
                                    form:(NSInteger)form
                                 message:(NSString *)message
                                     pid:(NSString *)pid {
  NSString *pathURITemplate = @"sendPotato";
  GTLRPotatoAPIQuery_SendPotato *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.xAddresseesUids = xAddresseesUids;
  query.addresseesTs = addresseesTs;
  query.addressor = addressor;
  query.form = form;
  query.message = message;
  query.pid = pid;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.sendPotato";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_Serialize

@dynamic input;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"input" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithInput:(NSArray<NSString *> *)input {
  NSString *pathURITemplate = @"serialize";
  GTLRPotatoAPIQuery_Serialize *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.input = input;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.serialize";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_Signup

@dynamic epid, password, phone;

+ (instancetype)queryWithEpid:(NSString *)epid
                     password:(NSString *)password
                        phone:(NSString *)phone {
  NSArray *pathParams = @[
    @"epid", @"password", @"phone"
  ];
  NSString *pathURITemplate = @"signup/{epid}/{password}/{phone}";
  GTLRPotatoAPIQuery_Signup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.epid = epid;
  query.password = password;
  query.phone = phone;
  query.expectedObjectClass = [GTLRPotatoAPI_Id class];
  query.loggingName = @"potatoAPI.signup";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_Sms

@dynamic body, number;

+ (instancetype)queryWithNumber:(NSString *)number
                           body:(NSString *)body {
  NSArray *pathParams = @[
    @"body", @"number"
  ];
  NSString *pathURITemplate = @"sms/{number}/{body}";
  GTLRPotatoAPIQuery_Sms *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.number = number;
  query.body = body;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.sms";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_Test

+ (instancetype)query {
  NSString *pathURITemplate = @"test";
  GTLRPotatoAPIQuery_Test *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.test";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_Unfollow

@dynamic xUid, oldId;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"xUid" : @"_uid" };
}

+ (instancetype)queryWithXUid:(NSString *)xUid
                        oldId:(NSString *)oldId {
  NSArray *pathParams = @[
    @"_uid", @"oldId"
  ];
  NSString *pathURITemplate = @"unfollow/{_uid}/{oldId}";
  GTLRPotatoAPIQuery_Unfollow *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.xUid = xUid;
  query.oldId = oldId;
  query.expectedObjectClass = [GTLRPotatoAPI_Notice class];
  query.loggingName = @"potatoAPI.unfollow";
  return query;
}

@end

@implementation GTLRPotatoAPIQuery_Update

@dynamic xKind, idKey, idValue, properties, values;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"xKind" : @"_kind" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"properties" : [NSString class],
    @"values" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithXKind:(NSString *)xKind
                         idKey:(NSString *)idKey
                       idValue:(NSString *)idValue
                    properties:(NSArray<NSString *> *)properties
                        values:(NSArray<NSString *> *)values {
  NSString *pathURITemplate = @"update";
  GTLRPotatoAPIQuery_Update *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:nil];
  query.xKind = xKind;
  query.idKey = idKey;
  query.idValue = idValue;
  query.properties = properties;
  query.values = values;
  query.expectedObjectClass = [GTLRPotatoAPI_Id class];
  query.loggingName = @"potatoAPI.update";
  return query;
}

@end
